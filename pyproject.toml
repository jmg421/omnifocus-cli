[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ofcli"
version = "1.0.0"
authors = [
    {name = "OmniFocus CLI Team", email = "contact@omnifocus-cli.com"},
]
description = "OmniFocus CLI - Command-line interface for OmniFocus with AI integration and Apple ecosystem support"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Utilities",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
    "Natural Language :: English",
]
keywords = ["omnifocus", "productivity", "task-management", "cli", "apple", "macos", "ai", "automation"]
dependencies = [
    "typer[all]>=0.9.0",
    "click>=8.0.0",
    "rich>=13.5.2",
    "python-dotenv>=1.0.0",
    "openai>=1.0.0",
    "anthropic>=0.3.1",
    "requests>=2.28.0",
    "pandas>=1.5.0",
    "numpy>=1.23.0",
    "thefuzz>=0.19.0",
    "python-dateutil>=2.8.2",
    "dateparser>=1.1.0",
    "pydantic>=2.0.0",
    "loguru>=0.6.0",
    "appscript>=1.2.5",
    "pyobjc-framework-EventKit>=9.0",
    "pyobjc-core>=9.0",
    "icalendar>=5.0.0",
    "recurring-ical-events>=2.1.0",
    "cryptography>=41.0.0",
    "markdown2>=2.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.1.3",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "pypandoc>=1.11",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
]

[project.urls]
Homepage = "https://github.com/jmg421/omni-cli"
"Bug Reports" = "https://github.com/jmg421/omni-cli/issues"
"Source" = "https://github.com/jmg421/omni-cli"
"Documentation" = "https://github.com/jmg421/omni-cli#readme"

[project.scripts]
ofcli = "ofcli.ofcli:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["ofcli*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
ofcli = ["*.json", "*.md", "*.txt", "plugins/*.omnijs"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["ofcli"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "appscript.*",
    "EventKit.*",
    "Foundation.*",
    "icalendar.*",
    "thefuzz.*",
    "dateparser.*",
    "recurring_ical_events.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
] 